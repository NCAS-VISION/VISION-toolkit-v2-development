[34m
.______________________________________________.
|[31m   _     _  _   ______  _  _______  _______   [34m|
|[31m  (_)   (_)| | / _____)| |(_______)(_______)  [34m|
|[31m   _     _ | |( (____  | | _     _  _     _   [34m|
|[31m  | |   | || | \____ \ | || |   | || |   | |  [34m|
|[31m   \ \ / / | | _____) )| || |___| || |   | |  [34m|
|[31m    \___/  |_|(______/ |_| \_____/ |_|   |_|  [34m|
|   _______             _   _      _           [34m|
|  (_______)           | | | |    (_)   _      [34m|
|      _   ___    ___  | | | |  _  _  _| |_    [34m|
|     | | / _ \  / _ \ | | | |_/ )| |(_   _)   [34m|
|     | || |_| || |_| || | |  _ ( | |  | |_    [34m|
|     |_| \___/  \___/  \_)|_| \_)|_|   \__)   [34m|
.______________________________________________.[32m
    
Parsed CLI configuration arguments are:
Namespace(verbose=3, config_file='configurations/um-satellite-9.json', preprocess_mode_obs=None, preprocess_mode_model=None, start_time_override=None, obs_data_path=None, model_data_path=None, chosen_obs_fields=None, chosen_model_fields=None, skip_all_plotting=False, outputs_dir=None, output_file_name=None, history_message=None, spatial_colocation_method=None, vertical_colocation_coord=None, source_axes=None, plotname_start=None, show_plot_of_input_obs=False, plot_of_input_obs_track_only=False, cfp_cscale=None, cfp_mapset_config=None, cfp_input_levs_config=None, cfp_input_general_config=None, cfp_input_track_only_config=None, cfp_output_levs_config=None, cfp_output_general_config=None, satellite_plugin_config=None, regrid_z_coord=None, regrid_method=None)

Default configuration is:
{'cfp-cscale': 'plasma',
 'cfp-input-general-config': {'legend': True,
                              'linewidth': 0.4,
                              'markersize': 5,
                              'title': 'Input: observational field (path, to '
                                       'be used for co-location, with its '
                                       'corresponding data, to be ignored)'},
 'cfp-input-levs-config': {},
 'cfp-input-track-only-config': {'colorbar': False,
                                 'legend': True,
                                 'linewidth': 0,
                                 'markersize': 0.5,
                                 'title': 'Input: flight track from '
                                          'observational field to co-locate '
                                          'model field onto'},
 'cfp-mapset-config': {},
 'cfp-output-general-config': {'legend': True,
                               'linewidth': 0.4,
                               'markersize': 5,
                               'title': 'Result: model co-located onto '
                                        'observational path'},
 'cfp-output-levs-config': {},
 'chosen-model-fields': False,
 'chosen-obs-fields': False,
 'halo-size': 1,
 'history-message': 'Processed using the NCAS VISION Toolkit to colocate from '
                    'model data to the observational data spatio-temporal '
                    'location.',
 'model-data-path': '.',
 'obs-data-path': '.',
 'output-file-name': 'vision_toolkit_result_field.nc',
 'outputs-dir': '.',
 'plot-of-input-obs-track-only': True,
 'plotname-start': 'vision_toolkit',
 'preprocess-mode-model': None,
 'preprocess-mode-obs': None,
 'show-plot-of-input-obs': True,
 'skip-all-plotting': False,
 'source-axes': False,
 'spatial-colocation-method': 'linear',
 'start-time-override': False,
 'verbose': 0,
 'vertical-colocation-coord': 'air_pressure'}

Succesfully read-in JSON config. file at: configurations/um-satellite-9.json
Configuration from file is:
{'cfp-cscale': 'plasma',
 'cfp-input-levs-config': {'max': 55, 'min': -5, 'step': 5},
 'cfp-mapset-config': {'proj': 'robin', 'resolution': '10m'},
 'cfp-output-levs-config': {'max': 1.6e-07, 'min': 2e-08, 'step': 2e-08},
 'chosen-model-fields': -2,
 'chosen-obs-fields': False,
 'model-data-path': '../data/main-workwith-test-ISO-simulator/Model_Input',
 'obs-data-path': '../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-201707032*',
 'output-file-name': 'um_satellite_9_vision_result.nc',
 'outputs-dir': 'cf-script-outputs/um-satellite-9',
 'preprocess-mode-obs': 'satellite',
 'skip-all-plotting': False,
 'start-time-override': '2017-07-21 00:00:00'}

Final input configuration, considering CLI and file inputs (with CLI overriding the file values) is:
Namespace(verbose=3, config_file='configurations/um-satellite-9.json', preprocess_mode_obs='satellite', preprocess_mode_model=None, start_time_override='2017-07-21 00:00:00', obs_data_path='../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-201707032*', model_data_path='../data/main-workwith-test-ISO-simulator/Model_Input', chosen_obs_fields=False, chosen_model_fields=-2, skip_all_plotting=False, outputs_dir='cf-script-outputs/um-satellite-9', output_file_name='um_satellite_9_vision_result.nc', history_message='Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.', spatial_colocation_method='linear', vertical_colocation_coord='air_pressure', source_axes=False, plotname_start='vision_toolkit', show_plot_of_input_obs=True, plot_of_input_obs_track_only=True, cfp_cscale='plasma', cfp_mapset_config={'resolution': '10m', 'proj': 'robin'}, cfp_input_levs_config={'min': -5, 'max': 55, 'step': 5}, cfp_input_general_config={'legend': True, 'markersize': 5, 'linewidth': 0.4, 'title': 'Input: observational field (path, to be used for co-location, with its corresponding data, to be ignored)'}, cfp_input_track_only_config={'legend': True, 'colorbar': False, 'markersize': 0.5, 'linewidth': 0, 'title': 'Input: flight track from observational field to co-locate model field onto'}, cfp_output_levs_config={'min': 2e-08, 'max': 1.6e-07, 'step': 2e-08}, cfp_output_general_config={'legend': True, 'markersize': 5, 'linewidth': 0.4, 'title': 'Result: model co-located onto observational path'}, satellite_plugin_config=None, regrid_z_coord=None, regrid_method=None, halo_size=1)

Found file name from glob: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_750_799-v1000.nc

_____ Time taken (in s) for 'get_files_to_individually_colocate' to run: 5.7484 _____

Read file list has length: 47

_____ Start of colocation iteration with file number 1 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_750_799-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1144 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.6992 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(4560)) K
Auxiliary coords: latitude(ncdim%npres(4560)) = [72.25733947753906, ..., 74.6573257446289] degree_north
                : longitude(ncdim%npres(4560)) = [-139.09249877929688, ..., 120.14857482910156] degree_east
                : time(ncdim%npres(4560)) = [2017-07-04 01:12:54, ..., 2017-07-04 01:17:56]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.4143 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.4143 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 8.605 _____

Applied override to observational times, now have: time(4560) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:05:02]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.0928 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0009 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2328 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.7285 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1703 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 4560

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(4560)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(4560)) = [72.25733947753906, ..., 74.6573257446289] degree_north
                : longitude(ncdim%npres(4560)) = [-139.09249877929688, ..., 120.14857482910156] degree_east
                : time(ncdim%npres(4560)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:05:02]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(4560)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(4560)) = [72.25733947753906, ..., 74.6573257446289] degree_north
                : longitude(ncdim%npres(4560)) = [-139.09249877929688, ..., 120.14857482910156] degree_east
                : time(ncdim%npres(4560)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:05:02]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 4560): [[5.892879096811857e-08, ..., 1.4293488020311155e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(4560)) 1
Auxiliary coords: latitude(ncdim%npres(4560)) = [72.25733947753906, ..., 74.6573257446289] degree_north
                : longitude(ncdim%npres(4560)) = [-139.09249877929688, ..., 120.14857482910156] degree_east
                : time(ncdim%npres(4560)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:05:02]

The final result field has data statistics of:

{'maximum': 1.0178290122635623e-07,
 'mean': 6.95406086922826e-08,
 'median': 6.741093267263625e-08,
 'mid_range': 7.839052197667256e-08,
 'minimum': 5.499814272698889e-08,
 'range': 4.678475849936734e-08,
 'root_mean_square': 7.018509202238268e-08,
 'sample_size': 4560,
 'standard_deviation': 9.489514471096779e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.1415 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_750_799-v1000.nc

_____ Start of colocation iteration with file number 2 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_100_149-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.119 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.4087 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [38.912376403808594, ..., 20.1785831451416] degree_north
                : longitude(ncdim%npres(6000)) = [-170.03509521484375, ..., 163.07650756835938] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 22:04:14, ..., 2017-07-03 22:10:52]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.4669 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.4669 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3487 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1137 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0011 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2587 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8667 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1537 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [38.912376403808594, ..., 20.1785831451416] degree_north
                : longitude(ncdim%npres(6000)) = [-170.03509521484375, ..., 163.07650756835938] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [38.912376403808594, ..., 20.1785831451416] degree_north
                : longitude(ncdim%npres(6000)) = [-170.03509521484375, ..., 163.07650756835938] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[6.127818644187892e-08, ..., 2.5244605896895456e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [38.912376403808594, ..., 20.1785831451416] degree_north
                : longitude(ncdim%npres(6000)) = [-170.03509521484375, ..., 163.07650756835938] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 8.227557351314553e-08,
 'mean': 6.36405301130096e-08,
 'median': 6.257331099483421e-08,
 'mid_range': 6.773742090279774e-08,
 'minimum': 5.319926829244995e-08,
 'range': 2.9076305220695582e-08,
 'root_mean_square': 6.394340847193153e-08,
 'sample_size': 6000,
 'standard_deviation': 6.216302272525354e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.2005 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_100_149-v1000.nc

_____ Start of colocation iteration with file number 3 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_250_299-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1335 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.5466 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-38.8714485168457, ..., -55.99214553833008] degree_north
                : longitude(ncdim%npres(6000)) = [-164.52804565429688, ..., 158.3148193359375] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 20:45:18, ..., 2017-07-03 20:51:56]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.471 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.4711 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3037 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1093 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0014 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2136 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.7144 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1589 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-38.8714485168457, ..., -55.99214553833008] degree_north
                : longitude(ncdim%npres(6000)) = [-164.52804565429688, ..., 158.3148193359375] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-38.8714485168457, ..., -55.99214553833008] degree_north
                : longitude(ncdim%npres(6000)) = [-164.52804565429688, ..., 158.3148193359375] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.769598996286158e-08, ..., 1.3004967738672385e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-38.8714485168457, ..., -55.99214553833008] degree_north
                : longitude(ncdim%npres(6000)) = [-164.52804565429688, ..., 158.3148193359375] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 7.900258697308401e-08,
 'mean': 6.060928808167699e-08,
 'median': 5.870779510160866e-08,
 'mid_range': 6.704724760948633e-08,
 'minimum': 5.5091908245888654e-08,
 'range': 2.391067872719536e-08,
 'root_mean_square': 6.081911769456416e-08,
 'sample_size': 6000,
 'standard_deviation': 5.047700008670725e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.1672 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_250_299-v1000.nc

_____ Start of colocation iteration with file number 4 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_000_049-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1221 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.4971 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [72.18312072753906, ..., 64.40560913085938] degree_north
                : longitude(ncdim%npres(6000)) = [-129.86781311035156, ..., 144.50819396972656] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 23:32:54, ..., 2017-07-03 23:39:32]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.4391 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.4392 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3008 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.0977 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0009 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2007 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.7219 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1663 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [72.18312072753906, ..., 64.40560913085938] degree_north
                : longitude(ncdim%npres(6000)) = [-129.86781311035156, ..., 144.50819396972656] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [72.18312072753906, ..., 64.40560913085938] degree_north
                : longitude(ncdim%npres(6000)) = [-129.86781311035156, ..., 144.50819396972656] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.696505653464524e-08, ..., 1.6104416476494192e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [72.18312072753906, ..., 64.40560913085938] degree_north
                : longitude(ncdim%npres(6000)) = [-129.86781311035156, ..., 144.50819396972656] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 1.1482824732312389e-07,
 'mean': 7.7216360398164e-08,
 'median': 7.428098891150302e-08,
 'mid_range': 8.49320525602674e-08,
 'minimum': 5.5035857797410906e-08,
 'range': 5.979238952571298e-08,
 'root_mean_square': 7.846520265423902e-08,
 'sample_size': 6000,
 'standard_deviation': 1.3943518724900475e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.1912 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_000_049-v1000.nc

_____ Start of colocation iteration with file number 5 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_500_549-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1164 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.5428 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-25.879701614379883, ..., 1.220100998878479] degree_north
                : longitude(ncdim%npres(6000)) = [-3.3370931148529053, ..., 9.663345336914062] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 21:18:38, ..., 2017-07-03 21:25:16]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.4484 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.4484 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.1886 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1152 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0009 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2163 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.7164 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.0978 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-25.879701614379883, ..., 1.220100998878479] degree_north
                : longitude(ncdim%npres(6000)) = [-3.3370931148529053, ..., 9.663345336914062] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-25.879701614379883, ..., 1.220100998878479] degree_north
                : longitude(ncdim%npres(6000)) = [-3.3370931148529053, ..., 9.663345336914062] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[6.219072689377505e-08, ..., 2.999162775196408e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-25.879701614379883, ..., 1.220100998878479] degree_north
                : longitude(ncdim%npres(6000)) = [-3.3370931148529053, ..., 9.663345336914062] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 1.8994141461721066e-07,
 'mean': 8.293029226113996e-08,
 'median': 7.35841281823247e-08,
 'mid_range': 1.2296460045095295e-07,
 'minimum': 5.5987786284695234e-08,
 'range': 1.3395362833251542e-07,
 'root_mean_square': 8.74897994767891e-08,
 'sample_size': 6000,
 'standard_deviation': 2.7875287226693706e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.146 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_500_549-v1000.nc

_____ Start of colocation iteration with file number 6 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_700_749-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.2677 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.3962 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [56.76377487182617, ..., 85.5788803100586] degree_north
                : longitude(ncdim%npres(6000)) = [-60.164161682128906, ..., -25.483671188354492] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 23:24:14, ..., 2017-07-03 23:30:52]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.4791 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.4791 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2244 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.0994 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0015 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2175 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.6313 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1152 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [56.76377487182617, ..., 85.5788803100586] degree_north
                : longitude(ncdim%npres(6000)) = [-60.164161682128906, ..., -25.483671188354492] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [56.76377487182617, ..., 85.5788803100586] degree_north
                : longitude(ncdim%npres(6000)) = [-60.164161682128906, ..., -25.483671188354492] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[2.6330071141225186e-08, ..., 1.4387264910224282e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [56.76377487182617, ..., 85.5788803100586] degree_north
                : longitude(ncdim%npres(6000)) = [-60.164161682128906, ..., -25.483671188354492] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 1.2000370648654527e-07,
 'mean': 7.562390001165611e-08,
 'median': 7.111640456523408e-08,
 'mid_range': 8.659239902279152e-08,
 'minimum': 5.318109155903778e-08,
 'range': 6.682261492750749e-08,
 'root_mean_square': 7.672580888418172e-08,
 'sample_size': 6000,
 'standard_deviation': 1.2956677658991763e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.1551 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_700_749-v1000.nc

_____ Start of colocation iteration with file number 7 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_000_049-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.119 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.6187 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [70.2000732421875, ..., 58.221038818359375] degree_north
                : longitude(ncdim%npres(6000)) = [-98.28284454345703, ..., -165.58937072753906] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 20:11:58, ..., 2017-07-03 20:18:36]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.4708 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.4708 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2107 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1009 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0014 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2246 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.6531 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.104 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [70.2000732421875, ..., 58.221038818359375] degree_north
                : longitude(ncdim%npres(6000)) = [-98.28284454345703, ..., -165.58937072753906] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [70.2000732421875, ..., 58.221038818359375] degree_north
                : longitude(ncdim%npres(6000)) = [-98.28284454345703, ..., -165.58937072753906] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.0156028405509094e-08, ..., 1.482241278505548e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [70.2000732421875, ..., 58.221038818359375] degree_north
                : longitude(ncdim%npres(6000)) = [-98.28284454345703, ..., -165.58937072753906] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 1.1434357265089642e-07,
 'mean': 8.245478860534829e-08,
 'median': 8.007435281949024e-08,
 'mid_range': 8.622176516531609e-08,
 'minimum': 5.809995767973576e-08,
 'range': 5.624361497116066e-08,
 'root_mean_square': 8.343441549523808e-08,
 'sample_size': 6000,
 'standard_deviation': 1.274792238285704e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.0672 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_000_049-v1000.nc

_____ Start of colocation iteration with file number 8 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_400_449-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1312 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.4758 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-80.44025421142578, ..., -52.14552307128906] degree_north
                : longitude(ncdim%npres(6000)) = [-22.938282012939453, ..., 6.639440059661865] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 22:44:14, ..., 2017-07-03 22:50:52]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.51 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.5101 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2187 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1038 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0011 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2271 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.7113 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.13 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-80.44025421142578, ..., -52.14552307128906] degree_north
                : longitude(ncdim%npres(6000)) = [-22.938282012939453, ..., 6.639440059661865] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-80.44025421142578, ..., -52.14552307128906] degree_north
                : longitude(ncdim%npres(6000)) = [-22.938282012939453, ..., 6.639440059661865] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[0.0, ..., 2.2617254564429078e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-80.44025421142578, ..., -52.14552307128906] degree_north
                : longitude(ncdim%npres(6000)) = [-22.938282012939453, ..., 6.639440059661865] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.214528739801456e-08,
 'mean': 5.9307007187488376e-08,
 'median': 5.9298057196885345e-08,
 'mid_range': 5.9499926772064403e-08,
 'minimum': 5.6854566146114245e-08,
 'range': 5.290721251900317e-09,
 'root_mean_square': 5.93153503905834e-08,
 'sample_size': 6000,
 'standard_deviation': 9.948318555838475e-10}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.2631 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_400_449-v1000.nc

_____ Start of colocation iteration with file number 9 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_150_199-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.124 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.7111 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [16.101226806640625, ..., -3.117630958557129] degree_north
                : longitude(ncdim%npres(6000)) = [-178.69688415527344, ..., 158.25538635253906] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 22:10:54, ..., 2017-07-03 22:17:32]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.5088 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.5088 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3193 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1077 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0015 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2097 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.6689 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1282 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [16.101226806640625, ..., -3.117630958557129] degree_north
                : longitude(ncdim%npres(6000)) = [-178.69688415527344, ..., 158.25538635253906] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [16.101226806640625, ..., -3.117630958557129] degree_north
                : longitude(ncdim%npres(6000)) = [-178.69688415527344, ..., 158.25538635253906] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.4225687695725746e-08, ..., 4.479795601744815e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [16.101226806640625, ..., -3.117630958557129] degree_north
                : longitude(ncdim%npres(6000)) = [-178.69688415527344, ..., 158.25538635253906] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.40411098018912e-08,
 'mean': 5.656718163091382e-08,
 'median': 5.674024130146791e-08,
 'mid_range': 5.759438522572952e-08,
 'minimum': 5.114766064956785e-08,
 'range': 1.2893449152323347e-08,
 'root_mean_square': 5.664456750973382e-08,
 'sample_size': 6000,
 'standard_deviation': 2.9598970759130754e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.2028 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_150_199-v1000.nc

_____ Start of colocation iteration with file number 10 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_000_049-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.131 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.5238 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [72.38213348388672, ..., 66.63133239746094] degree_north
                : longitude(ncdim%npres(6000)) = [-96.92585754394531, ..., 170.10670471191406] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 21:50:54, ..., 2017-07-03 21:57:32]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.4931 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.4931 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3403 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.0956 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0009 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2225 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.9259 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1819 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [72.38213348388672, ..., 66.63133239746094] degree_north
                : longitude(ncdim%npres(6000)) = [-96.92585754394531, ..., 170.10670471191406] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [72.38213348388672, ..., 66.63133239746094] degree_north
                : longitude(ncdim%npres(6000)) = [-96.92585754394531, ..., 170.10670471191406] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[0.0, ..., 1.6545631030562103e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [72.38213348388672, ..., 66.63133239746094] degree_north
                : longitude(ncdim%npres(6000)) = [-96.92585754394531, ..., 170.10670471191406] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 1.1232315652747503e-07,
 'mean': 7.723071566768657e-08,
 'median': 7.4048417083636e-08,
 'mid_range': 8.519183969670454e-08,
 'minimum': 5.8060522865934044e-08,
 'range': 5.4262633661540983e-08,
 'root_mean_square': 7.842424311740774e-08,
 'sample_size': 6000,
 'standard_deviation': 1.3630057446512288e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.4162 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_000_049-v1000.nc

_____ Start of colocation iteration with file number 11 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_200_249-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.129 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.5225 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-15.6161527633667, ..., -34.411888122558594] degree_north
                : longitude(ncdim%npres(6000)) = [-160.61048889160156, ..., 173.57003784179688] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 20:38:38, ..., 2017-07-03 20:45:16]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.4652 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.4653 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3345 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.109 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.001 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2209 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.7565 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1534 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-15.6161527633667, ..., -34.411888122558594] degree_north
                : longitude(ncdim%npres(6000)) = [-160.61048889160156, ..., 173.57003784179688] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-15.6161527633667, ..., -34.411888122558594] degree_north
                : longitude(ncdim%npres(6000)) = [-160.61048889160156, ..., 173.57003784179688] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.3859397372679624e-08, ..., 1.9168102616842383e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-15.6161527633667, ..., -34.411888122558594] degree_north
                : longitude(ncdim%npres(6000)) = [-160.61048889160156, ..., 173.57003784179688] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 8.239370559764006e-08,
 'mean': 5.970310820110239e-08,
 'median': 5.868733560827711e-08,
 'mid_range': 6.689006584600299e-08,
 'minimum': 5.138642609436591e-08,
 'range': 3.1007279503274155e-08,
 'root_mean_square': 6.006613919934254e-08,
 'sample_size': 6000,
 'standard_deviation': 6.593932775078654e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.2467 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_200_249-v1000.nc

_____ Start of colocation iteration with file number 12 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_650_699-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1186 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.5289 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [37.286678314208984, ..., 64.73428344726562] degree_north
                : longitude(ncdim%npres(6000)) = [-70.94972229003906, ..., -51.64992141723633] degree_east
                : time(ncdim%npres(6000)) = [2017-07-04 00:59:34, ..., 2017-07-04 01:06:12]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.5218 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.5219 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2795 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1423 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0011 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2285 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8467 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1245 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [37.286678314208984, ..., 64.73428344726562] degree_north
                : longitude(ncdim%npres(6000)) = [-70.94972229003906, ..., -51.64992141723633] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [37.286678314208984, ..., 64.73428344726562] degree_north
                : longitude(ncdim%npres(6000)) = [-70.94972229003906, ..., -51.64992141723633] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[7.848906362651274e-08, ..., 1.3297881855993258e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [37.286678314208984, ..., 64.73428344726562] degree_north
                : longitude(ncdim%npres(6000)) = [-70.94972229003906, ..., -51.64992141723633] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 1.1195670055897998e-07,
 'mean': 7.782567208442266e-08,
 'median': 7.649847830674912e-08,
 'mid_range': 8.273487877405943e-08,
 'minimum': 5.351305698913887e-08,
 'range': 5.8443643569841103e-08,
 'root_mean_square': 7.869704856901971e-08,
 'sample_size': 6000,
 'standard_deviation': 1.1678622268168524e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.1612 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_650_699-v1000.nc

_____ Start of colocation iteration with file number 13 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_550_599-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.127 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.5196 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-8.816637992858887, ..., 18.283443450927734] degree_north
                : longitude(ncdim%npres(6000)) = [-57.163978576660156, ..., -44.49198913574219] degree_east
                : time(ncdim%npres(6000)) = [2017-07-04 00:46:14, ..., 2017-07-04 00:52:52]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.4901 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.4902 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2069 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1127 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.001 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2289 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.6471 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.131 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-8.816637992858887, ..., 18.283443450927734] degree_north
                : longitude(ncdim%npres(6000)) = [-57.163978576660156, ..., -44.49198913574219] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-8.816637992858887, ..., 18.283443450927734] degree_north
                : longitude(ncdim%npres(6000)) = [-57.163978576660156, ..., -44.49198913574219] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[0.0, ..., 3.86630114218396e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-8.816637992858887, ..., 18.283443450927734] degree_north
                : longitude(ncdim%npres(6000)) = [-57.163978576660156, ..., -44.49198913574219] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 8.744823131658038e-08,
 'mean': 6.873125560779703e-08,
 'median': 6.898690356976685e-08,
 'mid_range': 7.167946488439675e-08,
 'minimum': 5.591069845221313e-08,
 'range': 3.1537532864367255e-08,
 'root_mean_square': 6.893944134800471e-08,
 'sample_size': 6000,
 'standard_deviation': 5.3536040151145715e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.0716 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_550_599-v1000.nc

_____ Start of colocation iteration with file number 14 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_150_199-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1171 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.5041 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [13.872132301330566, ..., -5.35856294631958] degree_north
                : longitude(ncdim%npres(6000)) = [155.33441162109375, ..., 132.37576293945312] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 23:52:54, ..., 2017-07-03 23:59:32]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.5623 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.5624 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2411 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1154 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.001 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.4639 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.6717 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1116 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [13.872132301330566, ..., -5.35856294631958] degree_north
                : longitude(ncdim%npres(6000)) = [155.33441162109375, ..., 132.37576293945312] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [13.872132301330566, ..., -5.35856294631958] degree_north
                : longitude(ncdim%npres(6000)) = [155.33441162109375, ..., 132.37576293945312] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.440969739654095e-08, ..., 2.481509734167973e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [13.872132301330566, ..., -5.35856294631958] degree_north
                : longitude(ncdim%npres(6000)) = [155.33441162109375, ..., 132.37576293945312] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.03356296345125e-08,
 'mean': 5.475627654999056e-08,
 'median': 5.461821611159361e-08,
 'mid_range': 5.5857906132636604e-08,
 'minimum': 5.138018263076071e-08,
 'range': 8.955447003751784e-09,
 'root_mean_square': 5.478870831971483e-08,
 'sample_size': 6000,
 'standard_deviation': 1.884870744571522e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.1199 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_150_199-v1000.nc

_____ Start of colocation iteration with file number 15 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_350_399-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1374 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.5584 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-84.9181137084961, ..., -64.42240142822266] degree_north
                : longitude(ncdim%npres(6000)) = [-165.8921356201172, ..., 49.57024002075195] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 20:58:38, ..., 2017-07-03 21:05:16]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.5655 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.5655 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2441 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.0961 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.001 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2307 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.7413 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.158 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-84.9181137084961, ..., -64.42240142822266] degree_north
                : longitude(ncdim%npres(6000)) = [-165.8921356201172, ..., 49.57024002075195] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-84.9181137084961, ..., -64.42240142822266] degree_north
                : longitude(ncdim%npres(6000)) = [-165.8921356201172, ..., 49.57024002075195] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[0.0, ..., 1.6101411358239507e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-84.9181137084961, ..., -64.42240142822266] degree_north
                : longitude(ncdim%npres(6000)) = [-165.8921356201172, ..., 49.57024002075195] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.063088040089106e-08,
 'mean': 5.8307160203725015e-08,
 'median': 5.8268446522821504e-08,
 'mid_range': 5.892337268541214e-08,
 'minimum': 5.721586496993323e-08,
 'range': 3.415015430957826e-09,
 'root_mean_square': 5.831147681791156e-08,
 'sample_size': 6000,
 'standard_deviation': 7.095052240706408e-10}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.2386 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_350_399-v1000.nc

_____ Start of colocation iteration with file number 16 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_300_349-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1258 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.5907 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-61.97477722167969, ..., -71.37745666503906] degree_north
                : longitude(ncdim%npres(6000)) = [-167.63230895996094, ..., 114.1983642578125] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 20:51:58, ..., 2017-07-03 20:58:36]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.4744 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.4744 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.277 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.115 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0011 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2369 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8322 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1613 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-61.97477722167969, ..., -71.37745666503906] degree_north
                : longitude(ncdim%npres(6000)) = [-167.63230895996094, ..., 114.1983642578125] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-61.97477722167969, ..., -71.37745666503906] degree_north
                : longitude(ncdim%npres(6000)) = [-167.63230895996094, ..., 114.1983642578125] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[0.0, ..., 1.5317342828203038e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-61.97477722167969, ..., -71.37745666503906] degree_north
                : longitude(ncdim%npres(6000)) = [-167.63230895996094, ..., 114.1983642578125] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.246257094753359e-08,
 'mean': 5.8903347977036235e-08,
 'median': 5.8720556109881115e-08,
 'mid_range': 5.976375671419035e-08,
 'minimum': 5.706494248084711e-08,
 'range': 5.397628466686481e-09,
 'root_mean_square': 5.8910080737196374e-08,
 'sample_size': 6000,
 'standard_deviation': 8.906231297115389e-10}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.3016 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_300_349-v1000.nc

_____ Start of colocation iteration with file number 17 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_100_149-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.2275 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.6779 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [30.707611083984375, ..., 11.695836067199707] degree_north
                : longitude(ncdim%npres(6000)) = [-148.41339111328125, ..., -173.19769287109375] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 20:25:18, ..., 2017-07-03 20:31:56]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.5108 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.5108 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2253 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1206 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0015 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.244 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8512 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1522 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [30.707611083984375, ..., 11.695836067199707] degree_north
                : longitude(ncdim%npres(6000)) = [-148.41339111328125, ..., -173.19769287109375] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [30.707611083984375, ..., 11.695836067199707] degree_north
                : longitude(ncdim%npres(6000)) = [-148.41339111328125, ..., -173.19769287109375] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[6.253910289881578e-08, ..., 5.273239134772398e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [30.707611083984375, ..., 11.695836067199707] degree_north
                : longitude(ncdim%npres(6000)) = [-148.41339111328125, ..., -173.19769287109375] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 7.644548148679343e-08,
 'mean': 5.73374219741582e-08,
 'median': 5.651037063719364e-08,
 'mid_range': 6.446205739570766e-08,
 'minimum': 5.2478633304621895e-08,
 'range': 2.396684818217153e-08,
 'root_mean_square': 5.748005769045158e-08,
 'sample_size': 6000,
 'standard_deviation': 4.0468597029009014e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.3991 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_100_149-v1000.nc

_____ Start of colocation iteration with file number 18 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_400_449-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1263 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.6852 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-78.23518371582031, ..., -50.12211227416992] degree_north
                : longitude(ncdim%npres(6000)) = [-47.98834228515625, ..., -20.469276428222656] degree_east
                : time(ncdim%npres(6000)) = [2017-07-04 00:26:14, ..., 2017-07-04 00:32:52]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.566 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.566 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2511 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1022 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0018 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2496 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.7888 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1135 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-78.23518371582031, ..., -50.12211227416992] degree_north
                : longitude(ncdim%npres(6000)) = [-47.98834228515625, ..., -20.469276428222656] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-78.23518371582031, ..., -50.12211227416992] degree_north
                : longitude(ncdim%npres(6000)) = [-47.98834228515625, ..., -20.469276428222656] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[4.771321994306838e-08, ..., 2.0494876553700888e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-78.23518371582031, ..., -50.12211227416992] degree_north
                : longitude(ncdim%npres(6000)) = [-47.98834228515625, ..., -20.469276428222656] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.167382406157208e-08,
 'mean': 5.907536103995304e-08,
 'median': 5.927325549441316e-08,
 'mid_range': 5.913568340016591e-08,
 'minimum': 5.659754273875974e-08,
 'range': 5.0762813228123416e-09,
 'root_mean_square': 5.908259998366351e-08,
 'sample_size': 6000,
 'standard_deviation': 9.248452999252472e-10}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.2394 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_400_449-v1000.nc

_____ Start of colocation iteration with file number 19 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_250_299-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1271 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.8863 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-30.430103302001953, ..., -48.417823791503906] degree_north
                : longitude(ncdim%npres(6000)) = [171.46310424804688, ..., 140.05967712402344] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 22:24:14, ..., 2017-07-03 22:30:52]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.6848 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.6849 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.294 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1561 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0012 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3193 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.9663 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1692 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-30.430103302001953, ..., -48.417823791503906] degree_north
                : longitude(ncdim%npres(6000)) = [171.46310424804688, ..., 140.05967712402344] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-30.430103302001953, ..., -48.417823791503906] degree_north
                : longitude(ncdim%npres(6000)) = [171.46310424804688, ..., 140.05967712402344] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.8448827030083795e-08, ..., 1.505883994650545e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-30.430103302001953, ..., -48.417823791503906] degree_north
                : longitude(ncdim%npres(6000)) = [171.46310424804688, ..., 140.05967712402344] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 7.903356900717228e-08,
 'mean': 6.111161361682719e-08,
 'median': 5.984804072373e-08,
 'mid_range': 6.580808678026491e-08,
 'minimum': 5.258260455335753e-08,
 'range': 2.6450964453814754e-08,
 'root_mean_square': 6.128491537061067e-08,
 'sample_size': 6000,
 'standard_deviation': 4.6055980209450685e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.9263 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_250_299-v1000.nc

_____ Start of colocation iteration with file number 20 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_550_599-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.2304 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 2.5284 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-2.5868430137634277, ..., 24.517383575439453] degree_north
                : longitude(ncdim%npres(6000)) = [-7.780371189117432, ..., 5.0582661628723145] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 21:25:18, ..., 2017-07-03 21:31:56]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.6136 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.6136 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2875 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1519 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0012 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2761 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 1.0194 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.2542 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-2.5868430137634277, ..., 24.517383575439453] degree_north
                : longitude(ncdim%npres(6000)) = [-7.780371189117432, ..., 5.0582661628723145] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-2.5868430137634277, ..., 24.517383575439453] degree_north
                : longitude(ncdim%npres(6000)) = [-7.780371189117432, ..., 5.0582661628723145] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[9.4601248017648e-08, ..., 4.6633532096935194e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-2.5868430137634277, ..., 24.517383575439453] degree_north
                : longitude(ncdim%npres(6000)) = [-7.780371189117432, ..., 5.0582661628723145] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 1.8014948205814999e-07,
 'mean': 8.918714028389354e-08,
 'median': 8.835453781578332e-08,
 'mid_range': 1.1748748940494396e-07,
 'minimum': 5.4825496751737944e-08,
 'range': 1.2532398530641204e-07,
 'root_mean_square': 9.308127973621674e-08,
 'sample_size': 6000,
 'standard_deviation': 2.6641671218467666e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 2.043 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_550_599-v1000.nc

_____ Start of colocation iteration with file number 21 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_100_149-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1932 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 2.3281 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [36.75355911254883, ..., 17.92775535583496] degree_north
                : longitude(ncdim%npres(6000)) = [163.55218505859375, ..., 137.3218231201172] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 23:46:14, ..., 2017-07-03 23:52:52]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.7749 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.775 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3818 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1407 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0022 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3088 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.9941 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1584 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [36.75355911254883, ..., 17.92775535583496] degree_north
                : longitude(ncdim%npres(6000)) = [163.55218505859375, ..., 137.3218231201172] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [36.75355911254883, ..., 17.92775535583496] degree_north
                : longitude(ncdim%npres(6000)) = [163.55218505859375, ..., 137.3218231201172] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.315752078602467e-08, ..., 3.220133214586457e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [36.75355911254883, ..., 17.92775535583496] degree_north
                : longitude(ncdim%npres(6000)) = [163.55218505859375, ..., 137.3218231201172] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 9.730705459892127e-08,
 'mean': 6.2294437364195e-08,
 'median': 5.7959902885284663e-08,
 'mid_range': 7.380677270485128e-08,
 'minimum': 5.03064908107813e-08,
 'range': 4.700056378813997e-08,
 'root_mean_square': 6.31532159837182e-08,
 'sample_size': 6000,
 'standard_deviation': 1.037939124248361e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.5834 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_100_149-v1000.nc

_____ Start of colocation iteration with file number 22 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_450_499-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.2136 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 2.6352 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-49.07011413574219, ..., -21.90143585205078] degree_north
                : longitude(ncdim%npres(6000)) = [0.23472200334072113, ..., 15.874102592468262] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 21:11:58, ..., 2017-07-03 21:18:36]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.7565 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.7565 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3441 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1506 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0013 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3784 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 1.0452 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1447 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-49.07011413574219, ..., -21.90143585205078] degree_north
                : longitude(ncdim%npres(6000)) = [0.23472200334072113, ..., 15.874102592468262] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-49.07011413574219, ..., -21.90143585205078] degree_north
                : longitude(ncdim%npres(6000)) = [0.23472200334072113, ..., 15.874102592468262] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.879045446130872e-08, ..., 3.857172127483246e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-49.07011413574219, ..., -21.90143585205078] degree_north
                : longitude(ncdim%npres(6000)) = [0.23472200334072113, ..., 15.874102592468262] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 9.211853537113156e-08,
 'mean': 6.621399509125193e-08,
 'median': 6.656758344436705e-08,
 'mid_range': 7.36917001600458e-08,
 'minimum': 5.526486494896003e-08,
 'range': 3.685367042217153e-08,
 'root_mean_square': 6.68828462208023e-08,
 'sample_size': 6000,
 'standard_deviation': 9.435145608370591e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 2.0409 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_450_499-v1000.nc

_____ Start of colocation iteration with file number 23 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_050_099-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.2528 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 3.1455 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [60.09725570678711, ..., 43.46177291870117] degree_north
                : longitude(ncdim%npres(6000)) = [-151.82008361816406, ..., 166.9567108154297] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 21:57:34, ..., 2017-07-03 22:04:12]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.8664 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.8665 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.5859 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.176 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0025 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.4185 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 1.0544 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.2132 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [60.09725570678711, ..., 43.46177291870117] degree_north
                : longitude(ncdim%npres(6000)) = [-151.82008361816406, ..., 166.9567108154297] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [60.09725570678711, ..., 43.46177291870117] degree_north
                : longitude(ncdim%npres(6000)) = [-151.82008361816406, ..., 166.9567108154297] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[0.0, ..., 2.2460577175811736e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [60.09725570678711, ..., 43.46177291870117] degree_north
                : longitude(ncdim%npres(6000)) = [-151.82008361816406, ..., 166.9567108154297] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 1.230600647806064e-07,
 'mean': 8.277894345088516e-08,
 'median': 8.177359168445812e-08,
 'mid_range': 8.809588420514834e-08,
 'minimum': 5.313170362969026e-08,
 'range': 6.992836115091615e-08,
 'root_mean_square': 8.456551124309617e-08,
 'sample_size': 6000,
 'standard_deviation': 1.7290812964154696e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.69 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_050_099-v1000.nc

_____ Start of colocation iteration with file number 24 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_750_799-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.175 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 2.292 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(1800)) K
Auxiliary coords: latitude(ncdim%npres(1800)) = [71.84090423583984, ..., 87.46150207519531] degree_north
                : longitude(ncdim%npres(1800)) = [-106.36113739013672, ..., 140.45420837402344] degree_east
                : time(ncdim%npres(1800)) = [2017-07-03 23:30:54, ..., 2017-07-03 23:32:52]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.6181 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.6181 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3184 _____

Applied override to observational times, now have: time(1800) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:01:58]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1337 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0012 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2819 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.9828 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1691 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 1800

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(1800)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(1800)) = [71.84090423583984, ..., 87.46150207519531] degree_north
                : longitude(ncdim%npres(1800)) = [-106.36113739013672, ..., 140.45420837402344] degree_east
                : time(ncdim%npres(1800)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:01:58]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(1800)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(1800)) = [71.84090423583984, ..., 87.46150207519531] degree_north
                : longitude(ncdim%npres(1800)) = [-106.36113739013672, ..., 140.45420837402344] degree_east
                : time(ncdim%npres(1800)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:01:58]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 1800): [[0.0, ..., 1.4139272967058068e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(1800)) 1
Auxiliary coords: latitude(ncdim%npres(1800)) = [71.84090423583984, ..., 87.46150207519531] degree_north
                : longitude(ncdim%npres(1800)) = [-106.36113739013672, ..., 140.45420837402344] degree_east
                : time(ncdim%npres(1800)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:01:58]

The final result field has data statistics of:

{'maximum': 9.735075177484693e-08,
 'mean': 7.531498700065713e-08,
 'median': 7.233000660856605e-08,
 'mid_range': 7.889682646451403e-08,
 'minimum': 6.044290115418114e-08,
 'range': 3.690785062066579e-08,
 'root_mean_square': 7.602696530295289e-08,
 'sample_size': 1800,
 'standard_deviation': 1.0380375054267085e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.6175 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_750_799-v1000.nc

_____ Start of colocation iteration with file number 25 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_600_649-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1647 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 2.9384 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [14.431976318359375, ..., 41.56182861328125] degree_north
                : longitude(ncdim%npres(6000)) = [-62.62815475463867, ..., -48.427913665771484] degree_east
                : time(ncdim%npres(6000)) = [2017-07-04 00:52:54, ..., 2017-07-04 00:59:32]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.7576 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.7576 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2704 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.152 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0017 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3067 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8355 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1502 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [14.431976318359375, ..., 41.56182861328125] degree_north
                : longitude(ncdim%npres(6000)) = [-62.62815475463867, ..., -48.427913665771484] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [14.431976318359375, ..., 41.56182861328125] degree_north
                : longitude(ncdim%npres(6000)) = [-62.62815475463867, ..., -48.427913665771484] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[6.490270136538549e-08, ..., 1.7614749380473474e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [14.431976318359375, ..., 41.56182861328125] degree_north
                : longitude(ncdim%npres(6000)) = [-62.62815475463867, ..., -48.427913665771484] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 7.25100103774558e-08,
 'mean': 5.603903459548297e-08,
 'median': 5.43998786710295e-08,
 'mid_range': 6.220413863761062e-08,
 'minimum': 5.1898266897765434e-08,
 'range': 2.061174347969037e-08,
 'root_mean_square': 5.618663339135211e-08,
 'sample_size': 6000,
 'standard_deviation': 4.069935314039492e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.5896 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_600_649-v1000.nc

_____ Start of colocation iteration with file number 26 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_650_699-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1815 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 2.2279 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [35.12025451660156, ..., 62.50778579711914] degree_north
                : longitude(ncdim%npres(6000)) = [-44.58864212036133, ..., -26.046480178833008] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 23:17:34, ..., 2017-07-03 23:24:12]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.6066 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.6067 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2927 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1472 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0012 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2777 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8553 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1564 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [35.12025451660156, ..., 62.50778579711914] degree_north
                : longitude(ncdim%npres(6000)) = [-44.58864212036133, ..., -26.046480178833008] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [35.12025451660156, ..., 62.50778579711914] degree_north
                : longitude(ncdim%npres(6000)) = [-44.58864212036133, ..., -26.046480178833008] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.329437621326368e-08, ..., 1.5176692873125333e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [35.12025451660156, ..., 62.50778579711914] degree_north
                : longitude(ncdim%npres(6000)) = [-44.58864212036133, ..., -26.046480178833008] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 9.634729209130414e-08,
 'mean': 7.027169351656918e-08,
 'median': 6.926244706457703e-08,
 'mid_range': 7.447607792759409e-08,
 'minimum': 5.2604863763884044e-08,
 'range': 4.3742428327420096e-08,
 'root_mean_square': 7.103479211121388e-08,
 'sample_size': 6000,
 'standard_deviation': 1.0384160081428977e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.4397 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_650_699-v1000.nc

_____ Start of colocation iteration with file number 27 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_600_649-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1718 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.8713 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [12.201823234558105, ..., 39.32752990722656] degree_north
                : longitude(ncdim%npres(6000)) = [-36.675350189208984, ..., -22.745515823364258] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 23:10:54, ..., 2017-07-03 23:17:32]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.701 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.701 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2713 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1521 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0016 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3091 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8488 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1798 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [12.201823234558105, ..., 39.32752990722656] degree_north
                : longitude(ncdim%npres(6000)) = [-36.675350189208984, ..., -22.745515823364258] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [12.201823234558105, ..., 39.32752990722656] degree_north
                : longitude(ncdim%npres(6000)) = [-36.675350189208984, ..., -22.745515823364258] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[6.036046328855005e-08, ..., 1.770823096982479e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [12.201823234558105, ..., 39.32752990722656] degree_north
                : longitude(ncdim%npres(6000)) = [-36.675350189208984, ..., -22.745515823364258] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 7.979872375910496e-08,
 'mean': 6.316034778082159e-08,
 'median': 6.12104439568376e-08,
 'mid_range': 6.650122275022618e-08,
 'minimum': 5.3203721741347394e-08,
 'range': 2.6595002017757564e-08,
 'root_mean_square': 6.34397141987811e-08,
 'sample_size': 6000,
 'standard_deviation': 5.947083808783168e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.5462 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_600_649-v1000.nc

_____ Start of colocation iteration with file number 28 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_500_549-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1654 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.8126 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-34.33134078979492, ..., -7.225325107574463] degree_north
                : longitude(ncdim%npres(6000)) = [-27.291372299194336, ..., -13.67333984375] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 22:57:34, ..., 2017-07-03 23:04:12]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.504 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.504 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.1874 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1284 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0015 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2657 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.6298 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.0958 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-34.33134078979492, ..., -7.225325107574463] degree_north
                : longitude(ncdim%npres(6000)) = [-27.291372299194336, ..., -13.67333984375] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-34.33134078979492, ..., -7.225325107574463] degree_north
                : longitude(ncdim%npres(6000)) = [-27.291372299194336, ..., -13.67333984375] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.6677811366124025e-08, ..., 3.866707195611432e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-34.33134078979492, ..., -7.225325107574463] degree_north
                : longitude(ncdim%npres(6000)) = [-27.291372299194336, ..., -13.67333984375] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 9.429337760005499e-08,
 'mean': 6.949485483511971e-08,
 'median': 7.036406885158749e-08,
 'mid_range': 7.482713900204666e-08,
 'minimum': 5.536090040403834e-08,
 'range': 3.893247719601665e-08,
 'root_mean_square': 7.003828760040945e-08,
 'sample_size': 6000,
 'standard_deviation': 8.70786319617536e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.1361 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_500_549-v1000.nc

_____ Start of colocation iteration with file number 29 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_450_499-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1174 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.6582 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-55.240726470947266, ..., -28.00251007080078] degree_north
                : longitude(ncdim%npres(6000)) = [-49.63764572143555, ..., -32.64811325073242] degree_east
                : time(ncdim%npres(6000)) = [2017-07-04 00:32:54, ..., 2017-07-04 00:39:32]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.4485 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.4486 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2029 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.115 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0011 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2425 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.714 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1051 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-55.240726470947266, ..., -28.00251007080078] degree_north
                : longitude(ncdim%npres(6000)) = [-49.63764572143555, ..., -32.64811325073242] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-55.240726470947266, ..., -28.00251007080078] degree_north
                : longitude(ncdim%npres(6000)) = [-49.63764572143555, ..., -32.64811325073242] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.788502897339115e-08, ..., 2.957845095667811e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-55.240726470947266, ..., -28.00251007080078] degree_north
                : longitude(ncdim%npres(6000)) = [-49.63764572143555, ..., -32.64811325073242] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.106189815569425e-08,
 'mean': 5.65997774044664e-08,
 'median': 5.6777524162272733e-08,
 'mid_range': 5.708383317016724e-08,
 'minimum': 5.310576818464023e-08,
 'range': 7.956129971054016e-09,
 'root_mean_square': 5.6617221177193606e-08,
 'sample_size': 6000,
 'standard_deviation': 1.4053225936114836e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.132 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_450_499-v1000.nc

_____ Start of colocation iteration with file number 30 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_200_249-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.118 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.6901 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-9.386215209960938, ..., -28.371044158935547] degree_north
                : longitude(ncdim%npres(6000)) = [149.91012573242188, ..., 125.40457916259766] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 23:59:34, ..., 2017-07-04 00:06:12]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.5238 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.5238 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2016 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.101 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.001 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2141 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.6434 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1095 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-9.386215209960938, ..., -28.371044158935547] degree_north
                : longitude(ncdim%npres(6000)) = [149.91012573242188, ..., 125.40457916259766] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-9.386215209960938, ..., -28.371044158935547] degree_north
                : longitude(ncdim%npres(6000)) = [149.91012573242188, ..., 125.40457916259766] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[2.4298869713833723e-08, ..., 3.5266321252996604e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-9.386215209960938, ..., -28.371044158935547] degree_north
                : longitude(ncdim%npres(6000)) = [149.91012573242188, ..., 125.40457916259766] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 7.987780031445694e-08,
 'mean': 6.160696137880381e-08,
 'median': 6.055658016419126e-08,
 'mid_range': 6.498972154833269e-08,
 'minimum': 5.010164278220843e-08,
 'range': 2.9776157532248513e-08,
 'root_mean_square': 6.211991470494469e-08,
 'sample_size': 6000,
 'standard_deviation': 7.966562158182126e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.0947 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_200_249-v1000.nc

_____ Start of colocation iteration with file number 31 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_550_599-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1213 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.2974 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-11.059074401855469, ..., 16.039691925048828] degree_north
                : longitude(ncdim%npres(6000)) = [-31.377643585205078, ..., -18.72844886779785] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 23:04:14, ..., 2017-07-03 23:10:52]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.489 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.489 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.1963 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1074 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0015 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.218 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.7547 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1003 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-11.059074401855469, ..., 16.039691925048828] degree_north
                : longitude(ncdim%npres(6000)) = [-31.377643585205078, ..., -18.72844886779785] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-11.059074401855469, ..., 16.039691925048828] degree_north
                : longitude(ncdim%npres(6000)) = [-31.377643585205078, ..., -18.72844886779785] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.988833355126922e-08, ..., 3.319502759334317e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-11.059074401855469, ..., 16.039691925048828] degree_north
                : longitude(ncdim%npres(6000)) = [-31.377643585205078, ..., -18.72844886779785] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 1.0298404261385988e-07,
 'mean': 8.441722169753187e-08,
 'median': 8.596708674503391e-08,
 'mid_range': 8.052906523077919e-08,
 'minimum': 5.8074087847698496e-08,
 'range': 4.490995476616138e-08,
 'root_mean_square': 8.497109023910703e-08,
 'sample_size': 6000,
 'standard_deviation': 9.686013488129368e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.1716 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_550_599-v1000.nc

_____ Start of colocation iteration with file number 32 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_300_349-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.118 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.743 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-55.81584930419922, ..., -68.70222473144531] degree_north
                : longitude(ncdim%npres(6000)) = [142.42311096191406, ..., 80.64900207519531] degree_east
                : time(ncdim%npres(6000)) = [2017-07-04 00:12:54, ..., 2017-07-04 00:19:32]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.5499 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.55 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.1965 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1005 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0018 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2772 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8022 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1375 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-55.81584930419922, ..., -68.70222473144531] degree_north
                : longitude(ncdim%npres(6000)) = [142.42311096191406, ..., 80.64900207519531] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-55.81584930419922, ..., -68.70222473144531] degree_north
                : longitude(ncdim%npres(6000)) = [142.42311096191406, ..., 80.64900207519531] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[0.0, ..., 1.888892925523195e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-55.81584930419922, ..., -68.70222473144531] degree_north
                : longitude(ncdim%npres(6000)) = [142.42311096191406, ..., 80.64900207519531] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.520015342975148e-08,
 'mean': 5.863550470740746e-08,
 'median': 5.853984568520953e-08,
 'mid_range': 6.074331085317967e-08,
 'minimum': 5.628646827660784e-08,
 'range': 8.913685153143641e-09,
 'root_mean_square': 5.864279888853115e-08,
 'sample_size': 6000,
 'standard_deviation': 9.249049617706738e-10}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.2498 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_300_349-v1000.nc

_____ Start of colocation iteration with file number 33 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_500_549-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1228 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.9987 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-32.09333419799805, ..., -4.991189956665039] degree_north
                : longitude(ncdim%npres(6000)) = [-52.989681243896484, ..., -39.56920623779297] degree_east
                : time(ncdim%npres(6000)) = [2017-07-04 00:39:34, ..., 2017-07-04 00:46:12]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.5851 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.5851 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2067 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.125 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0012 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2341 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.6959 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1336 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-32.09333419799805, ..., -4.991189956665039] degree_north
                : longitude(ncdim%npres(6000)) = [-52.989681243896484, ..., -39.56920623779297] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-32.09333419799805, ..., -4.991189956665039] degree_north
                : longitude(ncdim%npres(6000)) = [-52.989681243896484, ..., -39.56920623779297] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[7.136271528850622e-08, ..., 3.8968912001357994e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-32.09333419799805, ..., -4.991189956665039] degree_north
                : longitude(ncdim%npres(6000)) = [-52.989681243896484, ..., -39.56920623779297] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 8.070720867221622e-08,
 'mean': 6.266191844606657e-08,
 'median': 5.67249477570235e-08,
 'mid_range': 6.585328542936047e-08,
 'minimum': 5.0999362186504726e-08,
 'range': 2.9707846485711497e-08,
 'root_mean_square': 6.32899571013739e-08,
 'sample_size': 6000,
 'standard_deviation': 8.89396686255642e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.3451 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_500_549-v1000.nc

_____ Start of colocation iteration with file number 34 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_400_449-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1361 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.3497 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-72.1034927368164, ..., -44.370853424072266] degree_north
                : longitude(ncdim%npres(6000)) = [2.72760009765625, ..., 26.026796340942383] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 21:05:18, ..., 2017-07-03 21:11:56]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.5194 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.5195 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2247 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.133 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0022 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2558 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 1.1843 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1653 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-72.1034927368164, ..., -44.370853424072266] degree_north
                : longitude(ncdim%npres(6000)) = [2.72760009765625, ..., 26.026796340942383] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-72.1034927368164, ..., -44.370853424072266] degree_north
                : longitude(ncdim%npres(6000)) = [2.72760009765625, ..., 26.026796340942383] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[0.0, ..., 2.033541788730244e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-72.1034927368164, ..., -44.370853424072266] degree_north
                : longitude(ncdim%npres(6000)) = [2.72760009765625, ..., 26.026796340942383] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.368420288073195e-08,
 'mean': 5.9351963036286156e-08,
 'median': 5.9304784985305204e-08,
 'mid_range': 5.990797260288344e-08,
 'minimum': 5.613174232503494e-08,
 'range': 7.552460555697012e-09,
 'root_mean_square': 5.93644153690726e-08,
 'sample_size': 6000,
 'standard_deviation': 1.2158519034427117e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.296 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_400_449-v1000.nc

_____ Start of colocation iteration with file number 35 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_050_099-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1248 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.5384 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [58.218753814697266, ..., 41.222015380859375] degree_north
                : longitude(ncdim%npres(6000)) = [-179.8167266845703, ..., 141.27391052246094] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 23:39:34, ..., 2017-07-03 23:46:12]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.5653 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.5654 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3455 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1242 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0015 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2672 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.7963 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.2145 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [58.218753814697266, ..., 41.222015380859375] degree_north
                : longitude(ncdim%npres(6000)) = [-179.8167266845703, ..., 141.27391052246094] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [58.218753814697266, ..., 41.222015380859375] degree_north
                : longitude(ncdim%npres(6000)) = [-179.8167266845703, ..., 141.27391052246094] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[9.020776332920032e-08, ..., 2.7585863645598036e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [58.218753814697266, ..., 41.222015380859375] degree_north
                : longitude(ncdim%npres(6000)) = [-179.8167266845703, ..., 141.27391052246094] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 1.5168333876186831e-07,
 'mean': 8.915261782453842e-08,
 'median': 8.622282549809568e-08,
 'mid_range': 1.0289815163410165e-07,
 'minimum': 5.411296450633499e-08,
 'range': 9.757037425553332e-08,
 'root_mean_square': 9.128383667284414e-08,
 'sample_size': 6000,
 'standard_deviation': 1.960993556201245e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.4096 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_050_099-v1000.nc

_____ Start of colocation iteration with file number 36 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_700_749-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1334 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.933 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [58.68095016479492, ..., 87.7805404663086] degree_north
                : longitude(ncdim%npres(6000)) = [-87.94585418701172, ..., -46.36087417602539] degree_east
                : time(ncdim%npres(6000)) = [2017-07-04 01:06:14, ..., 2017-07-04 01:12:52]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.5503 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.5503 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2997 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1561 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0022 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3458 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8782 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1631 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [58.68095016479492, ..., 87.7805404663086] degree_north
                : longitude(ncdim%npres(6000)) = [-87.94585418701172, ..., -46.36087417602539] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [58.68095016479492, ..., 87.7805404663086] degree_north
                : longitude(ncdim%npres(6000)) = [-87.94585418701172, ..., -46.36087417602539] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.027190639505601e-08, ..., 1.4132289474291063e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [58.68095016479492, ..., 87.7805404663086] degree_north
                : longitude(ncdim%npres(6000)) = [-87.94585418701172, ..., -46.36087417602539] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 1.2045876970225407e-07,
 'mean': 7.967667687194012e-08,
 'median': 7.876993261647323e-08,
 'mid_range': 8.672286143713406e-08,
 'minimum': 5.298695317201405e-08,
 'range': 6.747181653024001e-08,
 'root_mean_square': 8.070673619855116e-08,
 'sample_size': 6000,
 'standard_deviation': 1.2853187560561396e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.6463 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_700_749-v1000.nc

_____ Start of colocation iteration with file number 37 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_450_499-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.186 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 2.5071 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-57.464630126953125, ..., -30.18920135498047] degree_north
                : longitude(ncdim%npres(6000)) = [-24.008747100830078, ..., -6.455443859100342] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 22:50:54, ..., 2017-07-03 22:57:32]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.661 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.661 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.293 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.2018 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0025 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3397 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 1.0808 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1451 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-57.464630126953125, ..., -30.18920135498047] degree_north
                : longitude(ncdim%npres(6000)) = [-24.008747100830078, ..., -6.455443859100342] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-57.464630126953125, ..., -30.18920135498047] degree_north
                : longitude(ncdim%npres(6000)) = [-24.008747100830078, ..., -6.455443859100342] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[0.0, ..., 3.4498854157250346e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-57.464630126953125, ..., -30.18920135498047] degree_north
                : longitude(ncdim%npres(6000)) = [-24.008747100830078, ..., -6.455443859100342] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.805955128339833e-08,
 'mean': 5.712422194183792e-08,
 'median': 5.691491563768558e-08,
 'mid_range': 6.175467385665919e-08,
 'minimum': 5.5449796429920054e-08,
 'range': 1.2609754853478272e-08,
 'root_mean_square': 5.713771657176465e-08,
 'sample_size': 6000,
 'standard_deviation': 1.241741750507002e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.6731 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_450_499-v1000.nc

_____ Start of colocation iteration with file number 38 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_350_399-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1562 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.8422 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-78.80592346191406, ..., -68.4852066040039] degree_north
                : longitude(ncdim%npres(6000)) = [140.90611267089844, ..., 11.343539237976074] degree_east
                : time(ncdim%npres(6000)) = [2017-07-04 00:19:34, ..., 2017-07-04 00:26:12]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.6778 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.6779 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3098 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.145 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0018 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3229 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 1.4004 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1782 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-78.80592346191406, ..., -68.4852066040039] degree_north
                : longitude(ncdim%npres(6000)) = [140.90611267089844, ..., 11.343539237976074] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-78.80592346191406, ..., -68.4852066040039] degree_north
                : longitude(ncdim%npres(6000)) = [140.90611267089844, ..., 11.343539237976074] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[0.0, ..., 1.3366755533617057e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-78.80592346191406, ..., -68.4852066040039] degree_north
                : longitude(ncdim%npres(6000)) = [140.90611267089844, ..., 11.343539237976074] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.064958923945817e-08,
 'mean': 5.845268871083069e-08,
 'median': 5.840152484118461e-08,
 'mid_range': 5.893446951927159e-08,
 'minimum': 5.721934979908501e-08,
 'range': 3.4302394403731556e-09,
 'root_mean_square': 5.845731912661016e-08,
 'sample_size': 6000,
 'standard_deviation': 7.357594342359572e-10}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.5514 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_350_399-v1000.nc

_____ Start of colocation iteration with file number 39 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_600_649-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1855 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.8543 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [20.60399627685547, ..., 47.770606994628906] degree_north
                : longitude(ncdim%npres(6000)) = [-13.781310081481934, ..., 1.3079309463500977] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 21:31:58, ..., 2017-07-03 21:38:36]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.6595 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.6595 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2743 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1515 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0017 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3023 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.882 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1335 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [20.60399627685547, ..., 47.770606994628906] degree_north
                : longitude(ncdim%npres(6000)) = [-13.781310081481934, ..., 1.3079309463500977] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [20.60399627685547, ..., 47.770606994628906] degree_north
                : longitude(ncdim%npres(6000)) = [-13.781310081481934, ..., 1.3079309463500977] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[0.0, ..., 1.4506366005247262e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [20.60399627685547, ..., 47.770606994628906] degree_north
                : longitude(ncdim%npres(6000)) = [-13.781310081481934, ..., 1.3079309463500977] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 8.978165342396613e-08,
 'mean': 6.466863192227881e-08,
 'median': 6.160954375651955e-08,
 'mid_range': 7.195224473105669e-08,
 'minimum': 5.412283603814724e-08,
 'range': 3.565881738581889e-08,
 'root_mean_square': 6.510967630338167e-08,
 'sample_size': 6000,
 'standard_deviation': 7.565579530476227e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.5376 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_600_649-v1000.nc

_____ Start of colocation iteration with file number 40 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_250_299-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1559 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 2.3123 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-32.6698112487793, ..., -50.466548919677734] degree_north
                : longitude(ncdim%npres(6000)) = [145.7615203857422, ..., 113.07560729980469] degree_east
                : time(ncdim%npres(6000)) = [2017-07-04 00:06:14, ..., 2017-07-04 00:12:52]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.6429 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.6429 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2558 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1399 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0018 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3102 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8746 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1342 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-32.6698112487793, ..., -50.466548919677734] degree_north
                : longitude(ncdim%npres(6000)) = [145.7615203857422, ..., 113.07560729980469] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-32.6698112487793, ..., -50.466548919677734] degree_north
                : longitude(ncdim%npres(6000)) = [145.7615203857422, ..., 113.07560729980469] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[4.4466212914875374e-08, ..., 1.2401599621560399e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-32.6698112487793, ..., -50.466548919677734] degree_north
                : longitude(ncdim%npres(6000)) = [145.7615203857422, ..., 113.07560729980469] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 8.61816178220815e-08,
 'mean': 6.457795985437485e-08,
 'median': 5.942859192223874e-08,
 'mid_range': 6.990862431389946e-08,
 'minimum': 5.3635630805717425e-08,
 'range': 3.254598701636407e-08,
 'root_mean_square': 6.522968489543114e-08,
 'sample_size': 6000,
 'standard_deviation': 9.197765631064264e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.476 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703233254z_20170704011758z_250_299-v1000.nc

_____ Start of colocation iteration with file number 41 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_350_399-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1571 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.811 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-76.59542846679688, ..., -69.6657485961914] degree_north
                : longitude(ncdim%npres(6000)) = [166.09689331054688, ..., 42.236366271972656] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 22:37:34, ..., 2017-07-03 22:44:12]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.6345 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.6345 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3339 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1474 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0011 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3377 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.9072 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1926 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-76.59542846679688, ..., -69.6657485961914] degree_north
                : longitude(ncdim%npres(6000)) = [166.09689331054688, ..., 42.236366271972656] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-76.59542846679688, ..., -69.6657485961914] degree_north
                : longitude(ncdim%npres(6000)) = [166.09689331054688, ..., 42.236366271972656] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[0.0, ..., 1.3584075769608562e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-76.59542846679688, ..., -69.6657485961914] degree_north
                : longitude(ncdim%npres(6000)) = [166.09689331054688, ..., 42.236366271972656] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.107046983346479e-08,
 'mean': 5.834868693737884e-08,
 'median': 5.829752544561345e-08,
 'mid_range': 5.90954081096504e-08,
 'minimum': 5.7120346385836004e-08,
 'range': 3.950123447628784e-09,
 'root_mean_square': 5.8353242777973296e-08,
 'sample_size': 6000,
 'standard_deviation': 7.291607428060222e-10}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 2.0223 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_350_399-v1000.nc

_____ Start of colocation iteration with file number 42 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_650_699-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1765 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.8635 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [43.23649597167969, ..., 70.91064453125] degree_north
                : longitude(ncdim%npres(6000)) = [-23.489736557006836, ..., -1.6323620080947876] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 21:38:38, ..., 2017-07-03 21:45:16]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.6002 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.6003 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2908 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1441 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0012 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3272 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.9491 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.159 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [43.23649597167969, ..., 70.91064453125] degree_north
                : longitude(ncdim%npres(6000)) = [-23.489736557006836, ..., -1.6323620080947876] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [43.23649597167969, ..., 70.91064453125] degree_north
                : longitude(ncdim%npres(6000)) = [-23.489736557006836, ..., -1.6323620080947876] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[9.384959253587547e-08, ..., 1.4744838363128162e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [43.23649597167969, ..., 70.91064453125] degree_north
                : longitude(ncdim%npres(6000)) = [-23.489736557006836, ..., -1.6323620080947876] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 9.116660104683303e-08,
 'mean': 7.378125643553588e-08,
 'median': 7.361039191165976e-08,
 'mid_range': 7.467777282518251e-08,
 'minimum': 5.8188944603532006e-08,
 'range': 3.297765644330102e-08,
 'root_mean_square': 7.402504604231565e-08,
 'sample_size': 6000,
 'standard_deviation': 6.002802708789028e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.6395 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_650_699-v1000.nc

_____ Start of colocation iteration with file number 43 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_300_349-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.177 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 2.3243 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-53.59278869628906, ..., -67.37742614746094] degree_north
                : longitude(ncdim%npres(6000)) = [168.04571533203125, ..., 111.05509948730469] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 22:30:54, ..., 2017-07-03 22:37:32]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.6035 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.6036 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2609 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1416 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0012 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2751 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8912 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1347 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-53.59278869628906, ..., -67.37742614746094] degree_north
                : longitude(ncdim%npres(6000)) = [168.04571533203125, ..., 111.05509948730469] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-53.59278869628906, ..., -67.37742614746094] degree_north
                : longitude(ncdim%npres(6000)) = [168.04571533203125, ..., 111.05509948730469] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[3.595777169145134e-08, ..., 1.7460728622102064e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-53.59278869628906, ..., -67.37742614746094] degree_north
                : longitude(ncdim%npres(6000)) = [168.04571533203125, ..., 111.05509948730469] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.955371655997247e-08,
 'mean': 5.8829830627597704e-08,
 'median': 5.866013560033619e-08,
 'mid_range': 6.322063914020388e-08,
 'minimum': 5.6887561720435286e-08,
 'range': 1.266615483953718e-08,
 'root_mean_square': 5.88413486219457e-08,
 'sample_size': 6000,
 'standard_deviation': 1.1641889784390352e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.5671 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_300_349-v1000.nc

_____ Start of colocation iteration with file number 44 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_200_249-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1619 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.7898 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [-7.141152858734131, ..., -26.17736053466797] degree_north
                : longitude(ncdim%npres(6000)) = [175.70501708984375, ..., 151.5620574951172] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 22:17:34, ..., 2017-07-03 22:24:12]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.6195 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.6195 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3239 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1534 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0012 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3142 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8602 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1336 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-7.141152858734131, ..., -26.17736053466797] degree_north
                : longitude(ncdim%npres(6000)) = [175.70501708984375, ..., 151.5620574951172] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [-7.141152858734131, ..., -26.17736053466797] degree_north
                : longitude(ncdim%npres(6000)) = [175.70501708984375, ..., 151.5620574951172] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.318142380784202e-08, ..., 3.432661717942742e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [-7.141152858734131, ..., -26.17736053466797] degree_north
                : longitude(ncdim%npres(6000)) = [175.70501708984375, ..., 151.5620574951172] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 6.806763799152084e-08,
 'mean': 5.8160495167439496e-08,
 'median': 5.6879931695056335e-08,
 'mid_range': 5.9604200774322666e-08,
 'minimum': 5.1140763557124494e-08,
 'range': 1.6926874434396343e-08,
 'root_mean_square': 5.846826617201458e-08,
 'sample_size': 6000,
 'standard_deviation': 5.991239524488429e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.4698 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703215054z_20170703233254z_200_249-v1000.nc

_____ Start of colocation iteration with file number 45 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_700_749-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1714 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 2.48 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(5040)) K
Auxiliary coords: latitude(ncdim%npres(5040)) = [63.69267272949219, ..., 89.53279876708984] degree_north
                : longitude(ncdim%npres(5040)) = [-45.68848419189453, ..., 122.72491455078125] degree_east
                : time(ncdim%npres(5040)) = [2017-07-03 21:45:18, ..., 2017-07-03 21:50:52]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.6298 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.6298 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.3287 _____

Applied override to observational times, now have: time(5040) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:05:34]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1496 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0012 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3042 _____

Halo reduced to keep subspace within axis limits
Halo reduced to keep subspace within axis limits

_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.9356 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1493 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 5040

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(5040)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(5040)) = [63.69267272949219, ..., 89.53279876708984] degree_north
                : longitude(ncdim%npres(5040)) = [-45.68848419189453, ..., 122.72491455078125] degree_east
                : time(ncdim%npres(5040)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:05:34]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(5040)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(5040)) = [63.69267272949219, ..., 89.53279876708984] degree_north
                : longitude(ncdim%npres(5040)) = [-45.68848419189453, ..., 122.72491455078125] degree_east
                : time(ncdim%npres(5040)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:05:34]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 5040): [[0.0, ..., --]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(5040)) 1
Auxiliary coords: latitude(ncdim%npres(5040)) = [63.69267272949219, ..., 89.53279876708984] degree_north
                : longitude(ncdim%npres(5040)) = [-45.68848419189453, ..., 122.72491455078125] degree_east
                : time(ncdim%npres(5040)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:05:34]

The final result field has data statistics of:

{'maximum': 1.196347565830073e-07,
 'mean': 7.704603662601549e-08,
 'median': 7.251148044493921e-08,
 'mid_range': 8.64147670496119e-08,
 'minimum': 5.3194777516216473e-08,
 'range': 6.643997906679083e-08,
 'root_mean_square': 7.825958386724114e-08,
 'sample_size': 5032,
 'standard_deviation': 1.372846339895445e-08}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.7326 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_700_749-v1000.nc

_____ Start of colocation iteration with file number 46 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_050_099-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1761 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 1.8477 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [52.759822845458984, ..., 35.00285339355469] degree_north
                : longitude(ncdim%npres(6000)) = [-135.17489624023438, ..., -169.03524780273438] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 20:18:38, ..., 2017-07-03 20:25:16]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.6743 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.6744 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2704 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1316 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0011 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.2888 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8642 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1546 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [52.759822845458984, ..., 35.00285339355469] degree_north
                : longitude(ncdim%npres(6000)) = [-135.17489624023438, ..., -169.03524780273438] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [52.759822845458984, ..., 35.00285339355469] degree_north
                : longitude(ncdim%npres(6000)) = [-135.17489624023438, ..., -169.03524780273438] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.858132802300655e-08, ..., 1.6150585848956235e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [52.759822845458984, ..., 35.00285339355469] degree_north
                : longitude(ncdim%npres(6000)) = [-135.17489624023438, ..., -169.03524780273438] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 9.622931058982183e-08,
 'mean': 6.716525303193244e-08,
 'median': 6.799972570143363e-08,
 'mid_range': 7.297311507860598e-08,
 'minimum': 4.9716919567390133e-08,
 'range': 4.65123910224317e-08,
 'root_mean_square': 6.770708625583094e-08,
 'sample_size': 6000,
 'standard_deviation': 8.548585521068472e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.4322 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_050_099-v1000.nc

_____ Start of colocation iteration with file number 47 of total 47: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_150_199-v1000.nc _____


_____ Time taken (in s) for 'read_obs_input_data' to run: 0.1673 _____


_____ Time taken (in s) for 'read_model_input_data' to run: 2.4171 _____


_____ Time taken (in s) for 'get_input_fields_of_interest' to run: 0.0 _____

Final pre-processed field from satellite plugin is Field: air_temperature (ncvar%t)
--------------------------------
Data            : air_temperature(ncdim%npres(6000)) K
Auxiliary coords: latitude(ncdim%npres(6000)) = [7.672985076904297, ..., -11.548052787780762] degree_north
                : longitude(ncdim%npres(6000)) = [-155.6153564453125, ..., -178.5377655029297] degree_east
                : time(ncdim%npres(6000)) = [2017-07-03 20:31:58, ..., 2017-07-03 20:38:36]

_____ Time taken (in s) for 'satellite_plugin' to run: 0.7127 _____


_____ Time taken (in s) for 'ensure_cf_compliance' to run: 0.7127 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels

_____ Time taken (in s) for 'make_preview_plots' to run: 0.2987 _____

Applied override to observational times, now have: time(6000) day since 2000-01-01 , with data of: [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'set_start_datetime' to run: 0.1559 _____


_____ Time taken (in s) for 'ensure_unit_calendar_consistency' to run: 0.0016 _____


_____ Time taken (in s) for 'check_time_coverage' to run: 0.3481 _____


_____ Time taken (in s) for 'subspace_to_spatiotemporal_bounding_box' to run: 0.8205 _____

Doing spatial regridding without using vertical levels.

_____ Time taken (in s) for 'spatial_interpolation' to run: 0.1035 _____

Starting time interpolation step.
Using split segments.

Number of model time data points: 3
Number of observational time sample data points: 6000

Observational (aux) coord. time key is: auxiliarycoordinate2
Model (dim) time key is: dimensioncoordinate0

*** Begin iteration over pairwise 'segments'. ***
Segments to loop over are, pairwise: [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)
 cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)]

*** Segment 0 ***

Datetime endpoints for this segment are: 2017-07-20 23:00:00, 2017-07-21 00:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [7.672985076904297, ..., -11.548052787780762] degree_north
                : longitude(ncdim%npres(6000)) = [-155.6153564453125, ..., -178.5377655029297] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 20, 23, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [0]}


*** Segment 1 ***

Datetime endpoints for this segment are: 2017-07-21 00:00:00, 2017-07-31 01:00:00.

Querying with query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False))) on field:
Field: id%UM_m01s51i010_vn1105 (ncvar%UM_m01s51i010_vn1105)
-----------------------------------------------------------
Data            : id%UM_m01s51i010_vn1105(time(3), air_pressure(19), ncdim%npres(6000)) 1
Cell methods    : time(3): point
Dimension coords: time(3) = [2017-07-20 23:00:00, 2017-07-21 00:00:00, 2017-07-31 01:00:00]
                : air_pressure(19) = [1000.0, ..., 100.0] hPa
Auxiliary coords: latitude(ncdim%npres(6000)) = [7.672985076904297, ..., -11.548052787780762] degree_north
                : longitude(ncdim%npres(6000)) = [-155.6153564453125, ..., -178.5377655029297] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]


Using subspace arguments for i=0 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [1]}

Using subspace arguments for i=1 of: {'auxiliarycoordinate2': <CF Query: (wi [cftime.DatetimeGregorian(2017, 7, 21, 0, 0, 0, 0, has_year_zero=False), cftime.DatetimeGregorian(2017, 7, 31, 1, 0, 0, 0, has_year_zero=False)))>, 'dimensioncoordinate0': [2]}

Final per-segment weighted value arrays are:
[<CF Data(19, 6000): [[5.8245453093477225e-08, ..., 5.080873678026486e-08]] 1>]

New history message reads: Converted from UM/PP by cf-python v3.17.0 ~ Processed using the NCAS VISION Toolkit to colocate from model data to the observational data spatio-temporal location.


Final result field is:

Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(ncdim%npres(6000)) 1
Auxiliary coords: latitude(ncdim%npres(6000)) = [7.672985076904297, ..., -11.548052787780762] degree_north
                : longitude(ncdim%npres(6000)) = [-155.6153564453125, ..., -178.5377655029297] degree_east
                : time(ncdim%npres(6000)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

The final result field has data statistics of:

{'maximum': 8.034833880932188e-08,
 'mean': 5.517965506021436e-08,
 'median': 5.3571959015214004e-08,
 'mid_range': 6.478297552508518e-08,
 'minimum': 4.921761224084848e-08,
 'range': 3.1130726568473405e-08,
 'root_mean_square': 5.532036247569286e-08,
 'sample_size': 6000,
 'standard_deviation': 3.943117025629124e-09}

Time interpolation complete.

_____ Time taken (in s) for 'time_interpolation' to run: 1.2183 _____

End of colocation iteration with file: ../data/marias-satellite-example-data/satellite-data/ral-l2p-tqoe-iasi_mhs_amsu_metopa-tir_mw-20170703201158z_20170703215054z_150_199-v1000.nc
Have compound output, a FieldList of length 47
Final Field(List) from colocation of all inputs from specified observational data path is: Field: long_name=CO MASS MIX RATIO ON PRESS LEVS (ncvar%t)
----------------------------------------------------------
Data            : long_name=CO MASS MIX RATIO ON PRESS LEVS(key%domainaxis0(275400)) 1
Auxiliary coords: latitude(key%domainaxis0(275400)) = [72.25733947753906, ..., -11.548052787780762] degree_north
                : longitude(key%domainaxis0(275400)) = [-139.09249877929688, ..., -178.5377655029297] degree_east
                : time(key%domainaxis0(275400)) = [2017-07-21 00:00:00, ..., 2017-07-21 00:06:38]

_____ Time taken (in s) for 'create_cra_outputs' to run: 0.0 _____


_____ Time taken (in s) for 'write_output_data' to run: 10.8251 _____

traj - making a trajectory plot
traj - plotting different colour markers based on a user set of levels
plotting lines
plotting markers
con - adding a colour bar

_____ Time taken (in s) for 'make_outputs_plot' to run: 8.5072 _____


_____ Time taken (in s) for 'main' to run: 308.0889 _____

